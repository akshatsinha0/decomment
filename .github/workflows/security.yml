name: Security Analysis

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run weekly security scans on Mondays at 9 AM UTC
    - cron: '0 9 * * 1'

jobs:
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run npm audit (moderate level)
      run: |
        echo "Running npm audit at moderate level..."
        npm audit --audit-level=moderate || {
          EXIT_CODE=$?
          if [ $EXIT_CODE -eq 1 ]; then
            echo "⚠️ Vulnerabilities found at moderate level or above"
            exit 1
          fi
          echo "✅ No moderate or higher vulnerabilities found"
        }

    - name: Run npm audit (high level for production)
      run: |
        echo "Running npm audit at high level for production dependencies..."
        npm audit --audit-level=high --production || {
          EXIT_CODE=$?
          if [ $EXIT_CODE -eq 1 ]; then
            echo "⚠️ High severity vulnerabilities found in production dependencies"
            exit 1
          fi
          echo "✅ No high severity vulnerabilities in production dependencies"
        }

    - name: Check for critical vulnerabilities
      run: |
        AUDIT_OUTPUT=$(npm audit --audit-level=critical --json 2>&1 || true)
        echo "$AUDIT_OUTPUT"

        # Check if there are any critical vulnerabilities
        CRITICAL_COUNT=$(echo "$AUDIT_OUTPUT" | grep -o '"critical":[0-9]*' | head -1 | cut -d':' -f2 || echo "0")

        if [ "$CRITICAL_COUNT" -gt 0 ]; then
          echo "❌ Critical vulnerabilities found: $CRITICAL_COUNT"
          npm audit --audit-level=critical
          exit 1
        else
          echo "✅ No critical vulnerabilities found"
        fi

  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}

    - name: Autobuild
      uses: github/codeql-action/autobuild@v3

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Dependency Review
      uses: actions/dependency-review-action@v4
      with:
        fail-on-severity: moderate
        allow-licenses: MIT, ISC, Apache-2.0, BSD-2-Clause, BSD-3-Clause
