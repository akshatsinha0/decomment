name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  release:
    types: [ published ]

jobs:
  test:
    name: Test on Node.js ${{ matrix.node-version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x, 20.x]
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint
      continue-on-error: true
      
    - name: Run tests
      run: npm run test:ci
      
    - name: Upload coverage to Codecov
      if: matrix.node-version == '18.x' && matrix.os == 'ubuntu-latest'
      uses: codecov/codecov-action@v5
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        
    - name: Verify package
      run: npm run verify

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level=moderate
      
    - name: Check for vulnerabilities
      run: npm audit --audit-level=high --production

  build:
    name: Build and Package
    runs-on: ubuntu-latest
    needs: [test, security]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Create package
      run: npm pack
      
    - name: Upload package artifact
      uses: actions/upload-artifact@v4
      with:
        name: npm-package
        path: '*.tgz'

  publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: [test, security, build]
    if: github.event_name == 'release' && github.event.action == 'published'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm run test:ci
      
    - name: Publish to NPM
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  integration-test:
    name: Integration Test
    runs-on: ${{ matrix.os }}
    needs: [build]
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        
    - name: Download package artifact
      uses: actions/download-artifact@v4
      with:
        name: npm-package
        
    - name: Install package globally
      run: npm install -g *.tgz
      
    - name: Test CLI installation
      run: 00akshatsinha00decomment --version
      
    - name: Test CLI functionality
      run: |
        echo "// Test comment" > test.js
        echo "console.log('test');" >> test.js
        00akshatsinha00decomment test.js
        
    - name: Test CLI with write option
      run: |
        echo "/* CSS comment */" > test.css
        echo "body { margin: 0; }" >> test.css
        00akshatsinha00decomment -w test.css
        cat test.css